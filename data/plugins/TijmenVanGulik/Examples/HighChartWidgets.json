{"id":"tijmenvangulik_examples_HighChartWidgets","name":"Example high chart widgets","description":"Example how to write simple widgets using High Charts. (Charts and gauges)","version":"1.0","author":"Tijmen van Gulik","url":"plugins/TijmenVanGulik/Examples/HighChartWidgets.json","script":"var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\nvar tijmenvangulik_examples_valuewidgets;\r\n(function (tijmenvangulik_examples_valuewidgets) {\r\n    /*------------------------------------------------------------------------------\r\n        Simple Chart gauge widget example\r\n    ------------------------------------------------------------------------------*/\r\n    var ExamplePowerGaugeWidget = (function (_super) {\r\n        __extends(ExamplePowerGaugeWidget, _super);\r\n        function ExamplePowerGaugeWidget(controller) {\r\n            _super.call(this, controller);\r\n            this.caption = \"Power gauge2\";\r\n        }\r\n        ExamplePowerGaugeWidget.prototype.setBaseOptions = function (options) {\r\n            _super.prototype.setBaseOptions.call(this, options);\r\n            options.yAxis.min = 0;\r\n            options.yAxis.max = 100;\r\n        };\r\n        ExamplePowerGaugeWidget.prototype.strokeDataUpdate = function (strokeData) {\r\n            //dummy, override to set value\r\n            var point = this.chart.series[0].points[0];\r\n            point.update(strokeData.power);\r\n        };\r\n        return ExamplePowerGaugeWidget;\r\n    })(ergometerWidgets.StrokeGaugeWidgetWidget);\r\n    /*------------------------------------------------------------------------------\r\n        Simple Chart gauge widget example\r\n    ------------------------------------------------------------------------------*/\r\n    var ExamplePowerChartWidget = (function (_super) {\r\n        __extends(ExamplePowerChartWidget, _super);\r\n        function ExamplePowerChartWidget(controller) {\r\n            _super.call(this, controller);\r\n            this.caption = \"Power chart2\";\r\n        }\r\n        ExamplePowerChartWidget.prototype.getChartOptions = function () {\r\n            return {\r\n                chart: {\r\n                    renderTo: 'container',\r\n                    type: 'areaspline'\r\n                },\r\n                title: null,\r\n                xAxis: {\r\n                    title: {\r\n                        text: ''\r\n                    },\r\n                    labels: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: ''\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    areaspline: {\r\n                        animation: false,\r\n                        marker: {\r\n                            enabled: false,\r\n                            states: {\r\n                                hover: {\r\n                                    enabled: true,\r\n                                    radius: 5\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    formatter: function () {\r\n                        return '<b>' + this.series.name + '</b><br/>' +\r\n                            'Nr' + ': ' + this.x / 64 + ' sec<br/>' +\r\n                            'Power: ' + Highcharts.numberFormat(this.y, 2);\r\n                    }\r\n                },\r\n                legend: {\r\n                    enabled: false\r\n                },\r\n                exporting: {\r\n                    enabled: false\r\n                },\r\n                series: [{\r\n                        name: 'Power data',\r\n                        data: []\r\n                    }]\r\n            };\r\n        };\r\n        ExamplePowerChartWidget.prototype.powerCurveUpdate = function (powerData) {\r\n            var series = this.chart.series[0];\r\n            series.setData([], false); //clear\r\n            for (var x = 0; x < powerData.forceCurveCount; x++)\r\n                series.addPoint([x, powerData.forceCurve[x]], (x == powerData.forceCurveCount - 1), false, false);\r\n        };\r\n        ExamplePowerChartWidget.prototype.loaded = function () {\r\n            _super.prototype.loaded.call(this);\r\n            pm3.monitor.pubsubs.subPowerCurveUpdate(this, this.powerCurveUpdate);\r\n        };\r\n        ExamplePowerChartWidget.prototype.beforeUnload = function () {\r\n            _super.prototype.beforeUnload.call(this);\r\n            pm3.monitor.pubsubs.unsubPowerCurveUpdate(this.powerCurveUpdate);\r\n        };\r\n        return ExamplePowerChartWidget;\r\n    })(ergometerWidgets.HighChartWidget);\r\n    /*------------------------------------------------------------------------------\r\n        Create and remove the widgets in the Plugin\r\n    ------------------------------------------------------------------------------*/\r\n    var ExamplePlugin = (function (_super) {\r\n        __extends(ExamplePlugin, _super);\r\n        function ExamplePlugin() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        ExamplePlugin.prototype.init = function () {\r\n            //create the widget(s) on create\r\n            dashboard.widgetRegistry().register(ExamplePowerGaugeWidget, 'tijmenvangulik_examples_PowerGaugeWidget', 'Power gauge', ['Examples']);\r\n            dashboard.widgetRegistry().register(ExamplePowerChartWidget, 'tijmenvangulik_examples_PowerChartWidget', 'Power chart', ['Examples']);\r\n        };\r\n        ExamplePlugin.prototype.remove = function () {\r\n            //remove the widgets when the plugin is removed\r\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_PowerGaugeWidget');\r\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_PowerChartWidget');\r\n        };\r\n        return ExamplePlugin;\r\n    })(ExternalPlugin);\r\n    var plugin;\r\n    plugin = new ExamplePlugin();\r\n})(tijmenvangulik_examples_valuewidgets || (tijmenvangulik_examples_valuewidgets = {}));\r\n","styles":"","typeScript":"module tijmenvangulik_examples_valuewidgets { //make a name space to prevent mix ups\n\n/*------------------------------------------------------------------------------\n    Simple Chart gauge widget example\n------------------------------------------------------------------------------*/\n \n    class ExamplePowerGaugeWidget  extends ergometerWidgets.StrokeGaugeWidgetWidget {\n\n\t\tpublic setBaseOptions(options :HighchartsOptions) {\n\t\t\tsuper.setBaseOptions(options);\n\t\t\toptions.yAxis.min = 0;\n\t\t\toptions.yAxis.max = 100;\n\t\t}\n\n\t\tpublic strokeDataUpdate(strokeData : pm3.StrokeData) {\n\t\t\t//dummy, override to set value\n\t\t\tvar point = this.chart.series[0].points[0];\n\n\t\t\tpoint.update(strokeData.power);\n\t\t}\n\n\t\tconstructor (controller : dashboard.Controller) {\n\t\t\tsuper(controller);\n\t\t\tthis.caption = \"Power gauge2\";\n\t\t}\n\n\t}\n\t\n/*------------------------------------------------------------------------------\n    Simple Chart gauge widget example\n------------------------------------------------------------------------------*/\t\n    class ExamplePowerChartWidget  extends ergometerWidgets.HighChartWidget {\n\n\t\t\n\t\tconstructor (controller : dashboard.Controller) {\n\t\t\tsuper(controller);\n\t\t\tthis.caption = \"Power chart2\";\n\n\t\t}\n\n\n\t\tpublic getChartOptions() : HighchartsOptions {\n\n\t\t\treturn {\n\t            chart: {\n\t                renderTo: 'container',\n\t                type: 'areaspline'\n\t            },\n\t            title: null,\n\t            xAxis: {\n\t                title: {\n\t                    text: ''\n\t                },\n\t                labels: {\n\t                \tenabled: false\n\t                }\n\t            },\n\t            yAxis: {\n\t                title: {\n\t                    text: ''\n\t                }                \n\t            },\n\t            plotOptions: { \n\t            \tareaspline: {\n\t\t            \tanimation: false,\n\t\t            \tmarker: {\n\t                        enabled: false,\n\t                        states: {\n\t                            hover: {\n\t                                enabled: true,\n\t                                radius: 5\n\t                            }\n\t                        }\n\t                    }\n\t            \t}\n\t            \t\n\t            },\n\t            tooltip: {\n\t                formatter: function() {\n\t                        return '<b>'+ this.series.name +'</b><br/>'+\n\t                        \t    'Nr'+': '+this.x/64+' sec<br/>'+\n\t                        \t\t'Power: '+Highcharts.numberFormat(this.y, 2);\n\t                }\n\t            },\n\t            legend: {\n\t                enabled: false\n\t            },\n\t            exporting: {\n\t                enabled: false\n\t            },\n\t            series: [{\n\t                name: 'Power data',\n\t                data: [ ]\n\t            }]\n\t            \n\t        };\n\t\t} \n\n\t\tpublic powerCurveUpdate(powerData : pm3.PowerData) {\n\n\t\t\tvar series = this.chart.series[0];\n\t\t\tseries.setData([],false);//clear\n\t\t\tfor(var  x = 0 ;x < powerData.forceCurveCount ; x++)\n\t\t\t\tseries.addPoint([x, powerData.forceCurve[x]], (x==powerData.forceCurveCount-1) ,false,false);\n \t\t}\n\n\t    public loaded() {\n          super.loaded();\n\t      pm3.monitor.pubsubs.subPowerCurveUpdate(this, this.powerCurveUpdate)\n        }\n        public beforeUnload() {\n          super.beforeUnload();\n\t      pm3.monitor.pubsubs.unsubPowerCurveUpdate( this.powerCurveUpdate);\n        }\n\n\t}\n/*------------------------------------------------------------------------------\n    Create and remove the widgets in the Plugin\n------------------------------------------------------------------------------*/\n    class ExamplePlugin extends ExternalPlugin {\n        \n        public init() {\n            //create the widget(s) on create\n            dashboard.widgetRegistry().register(ExamplePowerGaugeWidget,'tijmenvangulik_examples_PowerGaugeWidget','Power gauge',['Examples']);\n            dashboard.widgetRegistry().register(ExamplePowerChartWidget,'tijmenvangulik_examples_PowerChartWidget','Power chart',['Examples']);\n        }\n        public remove() {\n            //remove the widgets when the plugin is removed\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_PowerGaugeWidget');\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_PowerChartWidget');\n        }               \n    }\n\n    var plugin : ExamplePlugin;\n    plugin = new ExamplePlugin();\n    \n}\n","html":""}