{"id":"tijmenvangulik_examples_historywidget","name":"Examples history widget","description":"Example how to write a history widget","version":"1.0","author":"Tijmen van Gulik","url":"https://tijmenvangulik.github.io/Ergometerspace/data/plugins/TijmenVanGulik/Examples/HistoryWidget.json","script":"var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar tijmenvangulik_examples_historywidget;\n(function (tijmenvangulik_examples_historywidget) {\n    var HistoryXasOptions = (function () {\n        function HistoryXasOptions() {\n        }\n        HistoryXasOptions.getFromId = function (id) {\n            switch (id) {\n                case \"historyExampleTime\": return HistoryXasOptions.workTime;\n                case \"historyExampleMeters\": return HistoryXasOptions.workDistance;\n                default: return HistoryXasOptions.workTime;\n            }\n        };\n        HistoryXasOptions.workTime = { value: \"workTime\", controlId: \"historyExampleExampleTime\", chartAxisType: \"datetime\", caption: \"Work time\" };\n        HistoryXasOptions.workDistance = { value: \"workDistance\", controlId: \"historyExampleExampleMeters\", chartAxisType: \"linear\", caption: \"Work distance\" };\n        return HistoryXasOptions;\n    }());\n    var HistoryYasOptions = (function () {\n        function HistoryYasOptions() {\n        }\n        HistoryYasOptions.getFromId = function (id) {\n            switch (id) {\n                case \"historyExampleSplit\": return HistoryYasOptions.split;\n                case \"historyExamplePower\": return HistoryYasOptions.power;\n                case \"historyExampleStrokesPerMinute\": return HistoryYasOptions.strokesPerMinute;\n                default: return HistoryYasOptions.split;\n            }\n        };\n        HistoryYasOptions.split = { value: \"splitTime\", controlId: \"historyExampleSplit\", chartAxisType: \"datetime\", caption: \"Split time\" };\n        HistoryYasOptions.power = { value: \"power\", controlId: \"historyExamplePower\", chartAxisType: \"linear\", caption: \"Power\" };\n        HistoryYasOptions.strokesPerMinute = { value: \"strokesPerMinute\", controlId: \"historyExampleStrokesPerMinute\", chartAxisType: \"linear\", caption: \"Strokes per minute\" };\n        return HistoryYasOptions;\n    }());\n    /*------------------------------------------------------------------------------\n        Stroke history widget example\n    ------------------------------------------------------------------------------*/\n    var ExampleHistoryChartWidget = (function (_super) {\n        __extends(ExampleHistoryChartWidget, _super);\n        function ExampleHistoryChartWidget(controller) {\n            var _this = _super.call(this, controller) || this;\n            _this._historyXasOption = HistoryXasOptions.workTime;\n            _this._historyYasOption = HistoryYasOptions.split;\n            _this.caption = \"Example history chart\";\n            _this.editPropertiesVisible = true;\n            _this.defaultWidth = 2;\n            //init the dialog\n            var widget = _this;\n            $('#dialogHistoryExampleSettings').dialog({\n                width: 500,\n                autoOpen: false,\n                modal: true,\n                buttons: {\n                    \"Close\": function () {\n                        widget.setOptions();\n                        widget.reCreateChart();\n                        widget.updateChart();\n                        $(this).dialog(\"close\");\n                    },\n                    \"Clear data\": function () {\n                        widget.setOptions();\n                        pm3.monitor.clearHistory();\n                        widget.reCreateChart();\n                        widget.updateChart();\n                        $(this).dialog(\"close\");\n                    },\n                    \"Export\": function () {\n                        widget.exportData();\n                    }\n                }\n            });\n            return _this;\n        }\n        ExampleHistoryChartWidget.prototype.getChartOptions = function () {\n            Highcharts.setOptions({\n                global: {\n                    useUTC: true\n                }\n            });\n            var chartWidget = this;\n            return {\n                chart: {\n                    renderTo: 'container',\n                    type: 'area'\n                },\n                title: null,\n                xAxis: {\n                    type: this._historyXasOption.chartAxisType,\n                    title: {\n                        text: this._historyXasOption.caption\n                    },\n                    showFirstLabel: false\n                },\n                yAxis: {\n                    title: {\n                        text: this._historyYasOption.caption\n                    },\n                    type: this._historyYasOption.chartAxisType\n                },\n                plotOptions: {\n                    area: {\n                        marker: {\n                            enabled: false,\n                            states: {\n                                hover: {\n                                    enabled: true,\n                                    radius: 5\n                                }\n                            }\n                        }\n                    }\n                },\n                tooltip: {\n                    formatter: function () {\n                        var x = this.x;\n                        if (chartWidget._historyXasOption.chartAxisType == 'datetime')\n                            x = Highcharts.dateFormat('%H:%M:%S', x);\n                        var y = this.y;\n                        if (chartWidget._historyYasOption.chartAxisType == 'datetime')\n                            y = Highcharts.dateFormat('%M:%S', y);\n                        return '<b>' + this.series.name + '</b><br/>' +\n                            chartWidget._historyXasOption.caption + ':' + x + '<br/>' +\n                            chartWidget._historyYasOption.caption + ':' + y;\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                exporting: {\n                    enabled: true\n                },\n                series: [{\n                        name: 'History data',\n                        data: []\n                    }]\n            };\n        };\n        ExampleHistoryChartWidget.prototype.initControl = function () {\n            _super.prototype.initControl.call(this);\n        };\n        ExampleHistoryChartWidget.prototype.exportData = function () {\n            if (pm3.monitor.historyCount > 0) {\n                var exportData = [];\n                for (var i = 0; i < pm3.monitor.historyCount; i++) {\n                    var c = pm3.monitor.getHistory(i);\n                    exportData.push({ \"workTime\": utilities.formatRelativeTime(c.workTime),\n                        \"power\": c.power,\n                        \"strokesPerMinute\": c.strokesPerMinute,\n                        \"workDistance\": c.distance,\n                        \"splitTime\": utilities.formatRelativeTime(c.splitTime)\n                    });\n                }\n                var blob = new Blob([JSON.stringify(exportData)], { type: \"data:application/json;charset=utf-8\" });\n                saveAs(blob, \"History.JSON\");\n            }\n            else\n                app.showTopError(\"No data to export.\");\n        };\n        ExampleHistoryChartWidget.prototype.setOptions = function () {\n            var checkedControlIdX = $('input[name=radioHistoryExampleXAxis]:checked').prop('id');\n            this._historyXasOption = HistoryXasOptions.getFromId(checkedControlIdX);\n            var checkedControlIdY = $('input[name=radioHistoryExampleYAxis]:checked').prop('id');\n            this._historyYasOption = HistoryYasOptions.getFromId(checkedControlIdY);\n        };\n        ExampleHistoryChartWidget.prototype.openEditProperties = function () {\n            $('#' + this._historyXasOption.controlId).attr('checked', (true).toString());\n            $('#historyExampleXAxis').buttonset();\n            $('#' + this._historyYasOption.controlId).attr('checked', (true).toString());\n            $('#historyExampleYAxis').buttonset();\n            $('#dialogHistoryExampleSettings').dialog('open');\n        };\n        ExampleHistoryChartWidget.prototype.updateChart = function () {\n            var count = pm3.monitor.historyCount;\n            var series = this.chart.series[0];\n            var countPoints = series.points.length;\n            var clear = false;\n            if (count > countPoints) {\n                for (var i = countPoints; i < count; i++) {\n                    var last = (i == (count - 1));\n                    var yValue = pm3.monitor.getHistory(i)[this._historyYasOption.value];\n                    var xValue = pm3.monitor.getHistory(i)[this._historyXasOption.value];\n                    if (i > 0) {\n                        var xPrevValue = pm3.monitor.getHistory(i - 1)[this._historyXasOption.value];\n                        if (xPrevValue > xValue)\n                            clear = true;\n                    }\n                    if (xValue instanceof Date)\n                        xValue = xValue.getTime(); //date.getTime()+\n                    if (yValue instanceof Date)\n                        yValue = yValue.getTime(); //date.getTime()+\n                    series.addPoint([xValue, yValue], last, false);\n                }\n            }\n            else if (count < countPoints)\n                clear = true;\n            if (clear) {\n                pm3.monitor.clearHistory();\n                this.reCreateChart();\n            }\n        };\n        ExampleHistoryChartWidget.prototype.historyUpdate = function (count) {\n            this.updateChart();\n        };\n        ExampleHistoryChartWidget.prototype.loaded = function () {\n            _super.prototype.loaded.call(this);\n            pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate);\n        };\n        ExampleHistoryChartWidget.prototype.beforeUnload = function () {\n            _super.prototype.beforeUnload.call(this);\n            pm3.monitor.pubsubs.unsubHistoryUpdate(this.historyUpdate);\n        };\n        return ExampleHistoryChartWidget;\n    }(ergometerWidgets.HighChartWidget));\n    /*------------------------------------------------------------------------------\n        Create and remove the widgets in the Plugin\n    ------------------------------------------------------------------------------*/\n    var ExamplePlugin = (function (_super) {\n        __extends(ExamplePlugin, _super);\n        function ExamplePlugin() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ExamplePlugin.prototype.init = function () {\n            //create the widget(s) on create\n            dashboard.widgetRegistry().register(ExampleHistoryChartWidget, 'tijmenvangulik_examples_HistoryWidget', 'History chart', ['Examples']);\n        };\n        ExamplePlugin.prototype.remove = function () {\n            //remove the widgets when the plugin is removed\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_HistoryWidget');\n        };\n        return ExamplePlugin;\n    }(ExternalPlugin));\n    var plugin;\n    plugin = new ExamplePlugin();\n})(tijmenvangulik_examples_historywidget || (tijmenvangulik_examples_historywidget = {}));\n","styles":"\n","typeScript":"module tijmenvangulik_examples_historywidget { //make a name space to prevent mix ups\n\n\texport interface HistoryXasOption {\n\t\tvalue : string;\n\t\tcontrolId : string;\n\t\tchartAxisType : string;\n\t\tcaption : string;\n\t}\n\t\n\texport interface HistoryYasOption {\n\t\tvalue :string;\n\t\tcontrolId : string;\n\t\tchartAxisType : string;\n\t\tcaption : string;\n\t}\n\n\tclass HistoryXasOptions{ \n\t    public static workTime : HistoryXasOption = {value : \"workTime\", controlId :\"historyExampleExampleTime\",chartAxisType:\"datetime\", caption:\"Work time\" };\n\t    public static workDistance : HistoryXasOption = {value :\"workDistance\" , controlId :\"historyExampleExampleMeters\",chartAxisType:\"linear\",caption:\"Work distance\" };\n\t    public static getFromId(id : string) : HistoryXasOption {\n\t\t\tswitch (id) //should learn too loop items in class\n\t\t\t{\n\t\t\t\tcase \"historyExampleTime\" : return HistoryXasOptions.workTime;\n\t\t\t\tcase \"historyExampleMeters\" : return HistoryXasOptions.workDistance;\n\t\t\t\tdefault : return HistoryXasOptions.workTime;\n\t\t\t}\n\t    }\n\t}\n\n    class HistoryYasOptions{\n\t    public static split : HistoryYasOption= {value :\"splitTime\", controlId :\"historyExampleSplit\",chartAxisType:\"datetime\", caption:\"Split time\" };\n\t    public static power : HistoryYasOption= {value :\"power\", controlId :\"historyExamplePower\",chartAxisType:\"linear\", caption:\"Power\" };\n\t    public static strokesPerMinute : HistoryYasOption= {value :\"strokesPerMinute\", controlId :\"historyExampleStrokesPerMinute\",chartAxisType:\"linear\", caption:\"Strokes per minute\"};\n\t    public static getFromId(id : string) : HistoryXasOption {\n\t\t\tswitch (id) //should learn too loop items in class\n\t\t\t{\n\t\t\t\tcase \"historyExampleSplit\" : return HistoryYasOptions.split;\n\t\t\t\tcase \"historyExamplePower\" : return HistoryYasOptions.power;\n\t\t\t\tcase \"historyExampleStrokesPerMinute\" : return HistoryYasOptions.strokesPerMinute;\n\t\t\t\tdefault : return HistoryYasOptions.split;\n\t\t\t}\n\t    }\n\t\t\n\t}\n\n/*------------------------------------------------------------------------------\n    Stroke history widget example\n------------------------------------------------------------------------------*/\n    class ExampleHistoryChartWidget  extends ergometerWidgets.HighChartWidget {\n\n\t\tprivate _historyXasOption : HistoryXasOption = HistoryXasOptions.workTime;\n\t\tprivate _historyYasOption : HistoryYasOption = HistoryYasOptions.split;\n\t\t\n\t\tpublic getChartOptions() : HighchartsOptions {\n\t\t\tHighcharts.setOptions({\n            \tglobal: {\n                \tuseUTC: true\n            \t}\n        \t});\n        \tvar chartWidget =this;\n\t\t\treturn {\n\t            chart: {\n\t                renderTo: 'container',\n\t                type: 'area'\n\t            },\n\t            title: null,\n\t            xAxis: {\n\t                type: this._historyXasOption.chartAxisType,\n\t                title: {\n\t                    text: this._historyXasOption.caption\n\t                },\n\t                showFirstLabel: false\n\n\t            },\n\t            yAxis: {\n\t                title: {\n\t                    text: this._historyYasOption.caption\n\t                },\n\t                type: this._historyYasOption.chartAxisType\t                \n\t            },\n\t            plotOptions: { \n\t            \tarea: {\n\t\t            \tmarker: {\n\t                        enabled: false,\n\t                        states: {\n\t                            hover: {\n\t                                enabled: true,\n\t                                radius: 5\n\t                            }\n\t                        }\n\t                    }\n\t            \t}\n\t            \t\n\t            },\n\t            tooltip: {\n\t                formatter: function() { //need mixed scope here\n\t                        var x : any=this.x;\n\t                        if (chartWidget._historyXasOption.chartAxisType=='datetime') \n\t                          x=Highcharts.dateFormat('%H:%M:%S', x);\n\t\t\t\t\t\t\tvar y: any=this.y;\n\t                        if (chartWidget._historyYasOption.chartAxisType=='datetime') \n\t                          y=Highcharts.dateFormat('%M:%S', y) \n\t                        return '<b>'+ this.series.name +'</b><br/>'+\n\t                        \t    chartWidget._historyXasOption.caption+':'+x+'<br/>'+\n\t                        \t\tchartWidget._historyYasOption.caption+':'+y;\n\t                }\n\t            },\n\t            legend: {\n\t                enabled: false\n\t            },\n\t            exporting: {\n\t                enabled: true\n\t            },\n\t            series: [{\n\t                name: 'History data',\n\t                data: [ ]\n\t            }]\n\t            \n\t        };\n\t\t}\n        public initControl() {\n            super.initControl();\n\t\t}\n\t\tpublic exportData() {\n\t\t\tif (pm3.monitor.historyCount>0) {\n\t\t\t\tlet exportData = [];\n\t\t\t\tfor(let i =0; i<pm3.monitor.historyCount;i++ ) {\n\t\t\t\t\tlet c=pm3.monitor.getHistory(i);\n\t\t\t\t\texportData.push(\n\t\t\t\t\t\t\t{ \"workTime\": utilities.formatRelativeTime(c.workTime),\n\t\t\t\t\t\t\t\t\"power\": c.power,\n\t\t\t\t\t\t\t\t\"strokesPerMinute\":c.strokesPerMinute ,\n\t\t\t\t\t\t\t\t\"workDistance\":c.distance,\n\t\t\t\t\t\t\t\t\"splitTime\":utilities.formatRelativeTime(c.splitTime)\n\t\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tlet blob = new Blob([JSON.stringify(exportData)], {type: \"data:application/json;charset=utf-8\"});\n\n\t\t\t\tsaveAs(blob, \"History.JSON\");\n\t\t\t}\n\t\t\telse app.showTopError(\"No data to export.\")\n\t\t}\n\t\tconstructor (controller : dashboard.Controller) {\n\t\t\tsuper(controller);\n\t\t\tthis.caption = \"Example history chart\";\n\t\t\tthis.editPropertiesVisible = true;\n\t\t\tthis.defaultWidth=2;\n\t\t\t//init the dialog\n\t\t\tvar widget = this;\n\t\t\t$('#dialogHistoryExampleSettings').dialog({\n\t\t        width: 500, //can not come from the style\n\t\t        autoOpen: false,\n\t\t        modal: true,\n\t\t        buttons: {\n\t\t            \"Close\": function () {\n\t\t            \twidget.setOptions();\n\t\t            \twidget.reCreateChart();\n\t\t            \twidget.updateChart();\n\t\t                $(this).dialog(\"close\");\n\t\t            },\n\t\t            \"Clear data\": function ()  {\n\t\t            \twidget.setOptions();\n\t\t            \tpm3.monitor.clearHistory();\n\t\t            \twidget.reCreateChart();\n\t\t            \twidget.updateChart();\n\t\t                $(this).dialog(\"close\");\n\t\t            },\n\t\t\t\t\t\"Export\": function ()  {\n\t\t\t\t\t\twidget.exportData();\n\t\t\t\t\t}\n\t\t        }\n\t\t    });\n\t\t    \n\t\t}\n\n\t\tpublic setOptions() {\n\t\t\t\n\t\t\tvar checkedControlIdX = $('input[name=radioHistoryExampleXAxis]:checked').prop('id');\n\t\t\tthis._historyXasOption = HistoryXasOptions.getFromId(checkedControlIdX);\n\n\t\t\tvar checkedControlIdY = $('input[name=radioHistoryExampleYAxis]:checked').prop('id');\n\t\t\tthis._historyYasOption = HistoryYasOptions.getFromId(checkedControlIdY);\n\t\t\t\n\t\t}\n\t\tpublic openEditProperties() {\n\t\t\t$('#'+this._historyXasOption.controlId).attr('checked',(true).toString());\n\t\t\t$('#historyExampleXAxis').buttonset();\n\n\t\t\t$('#'+this._historyYasOption.controlId).attr('checked',(true).toString());\n      \t\t$('#historyExampleYAxis').buttonset();\n\n\t\t\t$('#dialogHistoryExampleSettings').dialog('open');\n\n\t\t}\n\n\t\tpublic updateChart() {\n\n\t\t\tvar count : number= pm3.monitor.historyCount;\n\t\t\tvar series = this.chart.series[0];\n\t\t\tvar countPoints  = series.points.length;\n\t\t\tvar clear = false;\n\t\t\t\n\t\t\tif (count>countPoints) {\t\t\n\n\t\t\t\tfor (var i=countPoints;i<count;i++) {\n\t\t\t\t\tvar last = (i==(count-1));\n\t\t\t\t\tvar yValue = pm3.monitor.getHistory(i)[this._historyYasOption.value];\n\n\t\t\t\t\tvar xValue = pm3.monitor.getHistory(i)[this._historyXasOption.value];\n\t\t\t\t\tif (i>0) {\n\t\t\t\t\t\tvar xPrevValue = pm3.monitor.getHistory(i-1)[this._historyXasOption.value];\n\t\t\t\t\t\tif (xPrevValue>xValue) //when time or meters go backwards, do a clear\n\t\t\t\t\t\t  clear= true; \n\t\t\t\t\t}\n\t\t          \tif (xValue instanceof Date )\n\t\t        \t   xValue = xValue.getTime();  //date.getTime()+\n\t\t        \tif (yValue instanceof Date )\n\t\t        \t   yValue = yValue.getTime();\t//date.getTime()+\n\n\t\t\t\t\tseries.addPoint([xValue, yValue], last ,false);\n\t\t\t\t}\n\t        \t\t\n\t\t\t}\n\t\t\telse if (count<countPoints) clear=true;\n\t\t\t\n\t\t\tif (clear) {\n\t\t\t\tpm3.monitor.clearHistory();\n\t\t\t\tthis.reCreateChart();\n\t\t\t}\n\n\t\t}\n\t\tpublic historyUpdate(count : number) {\n\t        this.updateChart();\n \t\t}\n\n \t\tpublic loaded() {\n          super.loaded();\n          pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate);\n        }\n        public beforeUnload() {\n          super.beforeUnload();\n          pm3.monitor.pubsubs.unsubHistoryUpdate( this.historyUpdate);\n        }\n \t\t\t\n\t}\n\n/*------------------------------------------------------------------------------\n    Create and remove the widgets in the Plugin\n------------------------------------------------------------------------------*/\n    class ExamplePlugin extends ExternalPlugin {\n        \n        public historyWidget : ExampleHistoryChartWidget;\n        \n        public init() {\n            //create the widget(s) on create\n            dashboard.widgetRegistry().register(ExampleHistoryChartWidget,'tijmenvangulik_examples_HistoryWidget','History chart',['Examples']);\n        }\n        public remove() {\n            //remove the widgets when the plugin is removed\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_HistoryWidget');\n        }               \n    }\n\n    var plugin : ExamplePlugin;\n    plugin = new ExamplePlugin();\n    \n}","html":"<div id=\"dialogHistoryExampleSettings\" title=\"Example history settings\" >\n    <div class=\"form-horizontal\">\n        <div class=\"control-group\">\n            <label class=\"control-label\" for=\"historyExampleXAxis\">X-axis</label>\n            <div class=\"controls\">\n                <div id=\"historyExampleXAxis\">\n                    <input type=\"radio\" id=\"historyExampleTime\" name=\"radioHistoryExampleXAxis\" /><label for=\"historyExampleTime\">Time</label>\n                    <input type=\"radio\" id=\"historyExampleMeters\" name=\"radioHistoryExampleXAxis\" /><label for=\"historyExampleMeters\">Meters</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"control-group\">\n            <label class=\"control-label\" for=\"historyExampleYAxis\">Y-axis</label>\n            <div class=\"controls\">\n                <div id=\"historyExampleYAxis\">\n                    <input type=\"radio\" id=\"historyExampleSplit\" name=\"radioHistoryExampleYAxis\" /><label for=\"historyExampleSplit\">Split</label>\n                    <input type=\"radio\" id=\"historyExamplePower\" name=\"radioHistoryExampleYAxis\" /><label for=\"historyExamplePower\">Power</label>\n                    <input type=\"radio\" id=\"historyExampleStrokesPerMinute\" name=\"radioHistoryExampleYAxis\" /><label for=\"historyExampleStrokesPerMinute\">Strokes per min</label>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n"}