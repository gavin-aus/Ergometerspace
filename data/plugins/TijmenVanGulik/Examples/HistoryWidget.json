{"id":"tijmenvangulik_examples_historywidget","name":"Examples history widget","description":"Example how to write a history widget","version":"1.0","author":"Tijmen van Gulik","url":"https://tijmenvangulik.github.io/Ergometerspace/data/plugins/TijmenVanGulik/Examples/HistoryWidget.json","script":"var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar tijmenvangulik_examples_historywidget;\n(function (tijmenvangulik_examples_historywidget) {\n    var HistoryXasOptions = (function () {\n        function HistoryXasOptions() {\n        }\n        HistoryXasOptions.getFromId = function (id) {\n            switch (id) {\n                case \"historyExampleTime\": return HistoryXasOptions.workTime;\n                case \"historyExampleMeters\": return HistoryXasOptions.distance;\n                default: return HistoryXasOptions.workTime;\n            }\n        };\n        HistoryXasOptions.workTime = { value: \"workTime\", controlId: \"historyExampleTime\", chartAxisType: \"datetime\", caption: \"Work time\" };\n        HistoryXasOptions.distance = { value: \"distance\", controlId: \"historyExampleMeters\", chartAxisType: \"linear\", caption: \"Work distance\" };\n        return HistoryXasOptions;\n    }());\n    tijmenvangulik_examples_historywidget.HistoryXasOptions = HistoryXasOptions;\n    var HistoryYasOptions = (function () {\n        function HistoryYasOptions() {\n        }\n        HistoryYasOptions.getFromId = function (id) {\n            switch (id) {\n                case \"historyExampleSplit\": return HistoryYasOptions.split;\n                case \"historyExamplePower\": return HistoryYasOptions.power;\n                case \"historyExampleStrokesPerMinute\": return HistoryYasOptions.strokesPerMinute;\n                case \"historyExampleHeartRate\": return HistoryYasOptions.heartRate;\n                case \"historyExampleNone\": return HistoryYasOptions.none;\n                default: return HistoryYasOptions.split;\n            }\n        };\n        HistoryYasOptions.split = { value: \"splitTime\", controlId: \"historyExampleSplit\", chartAxisType: \"datetime\", caption: \"Split time\" };\n        HistoryYasOptions.power = { value: \"power\", controlId: \"historyExamplePower\", chartAxisType: \"linear\", caption: \"Power\" };\n        HistoryYasOptions.strokesPerMinute = { value: \"strokesPerMinute\", controlId: \"historyExampleStrokesPerMinute\", chartAxisType: \"linear\", caption: \"Strokes per minute\" };\n        HistoryYasOptions.heartRate = { value: \"heartRate\", controlId: \"historyExampleHeartRate\", chartAxisType: \"linear\", caption: \"Heart rate\" };\n        HistoryYasOptions.none = { value: \"none\", controlId: \"historyExampleNone\", chartAxisType: \"\", caption: \"\" };\n        return HistoryYasOptions;\n    }());\n    tijmenvangulik_examples_historywidget.HistoryYasOptions = HistoryYasOptions;\n    // set up the updating of the chart each second\n    var ExampleHistoryChartWidget = (function (_super) {\n        __extends(ExampleHistoryChartWidget, _super);\n        function ExampleHistoryChartWidget(controller) {\n            var _this = _super.call(this, controller) || this;\n            _this._historyXasOption = HistoryXasOptions.workTime;\n            _this._historyYasOption = HistoryYasOptions.split;\n            _this._historyYasOption2 = HistoryYasOptions.none;\n            _this._historyYAxisStartZero = true;\n            _this.editPropertiesVisible = true;\n            _this.defaultWidth = 3;\n            return _this;\n        }\n        ExampleHistoryChartWidget.prototype.getHistorySettings = function () {\n            return {\n                yAxis: this._historyYasOption.controlId,\n                yAxis2: this._historyYasOption2.controlId,\n                historyYAxisStartZero: this._historyYAxisStartZero\n            };\n        };\n        ExampleHistoryChartWidget.prototype.setHistorySettings = function (settings) {\n            this._historyYasOption = HistoryYasOptions.getFromId(settings.yAxis);\n            this._historyYasOption2 = HistoryYasOptions.getFromId(settings.yAxis2);\n            this._historyYAxisStartZero = settings.historyYAxisStartZero === true;\n        };\n        ExampleHistoryChartWidget.prototype.saveHistoryState = function () {\n            localStorage.setItem(\"historyExampleChartWidget_settings\", JSON.stringify(this.getHistorySettings()));\n        };\n        ExampleHistoryChartWidget.prototype.loadHistoryState = function () {\n            var settingsString = localStorage.getItem(\"historyExampleChartWidget_settings\");\n            var settings;\n            if (settingsString != \"undefined\" && settingsString != null && settingsString != \"null\") {\n                settings = JSON.parse(settingsString);\n                this.setHistorySettings(settings);\n            }\n        };\n        ExampleHistoryChartWidget.prototype.getChartOptions = function () {\n            Highcharts.setOptions({\n                global: {\n                    useUTC: true\n                }\n            });\n            var chartWidget = this;\n            return {\n                chart: {\n                    renderTo: 'container',\n                    type: 'area'\n                    //\t                zoomType: 'x',\n                    //\t                marginRight: 10,\n                    //\t                reflow: true\n                },\n                title: null,\n                xAxis: {\n                    type: this._historyXasOption.chartAxisType,\n                    title: {\n                        text: this._historyXasOption.caption\n                    },\n                    showFirstLabel: false\n                },\n                yAxis: [{\n                        title: {\n                            text: this._historyYasOption.caption\n                        },\n                        type: this._historyYasOption.chartAxisType\n                    }, {\n                        title: {\n                            text: this._historyYasOption2.caption\n                        },\n                        type: this._historyYasOption2.chartAxisType,\n                        opposite: true\n                    }],\n                plotOptions: {\n                    area: {\n                        marker: {\n                            enabled: false,\n                            states: {\n                                hover: {\n                                    enabled: true,\n                                    radius: 5\n                                }\n                            }\n                        },\n                        threshold: (this._historyYAxisStartZero) ? 0 : null\n                    }\n                },\n                tooltip: {\n                    formatter: function () {\n                        var x = this.x;\n                        if (chartWidget._historyXasOption.chartAxisType == 'datetime')\n                            x = Highcharts.dateFormat('%H:%M:%S', x);\n                        var y = this.y;\n                        var yAxis = chartWidget._historyYasOption;\n                        if (this.series.index == 1)\n                            yAxis = chartWidget._historyYasOption2;\n                        if (yAxis.chartAxisType == 'datetime')\n                            y = Highcharts.dateFormat('%M:%S', y);\n                        return '<b>' + this.series.name + '</b><br/>' +\n                            chartWidget._historyXasOption.caption + ':' + x + '<br/>' +\n                            yAxis.caption + ':' + y;\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                exporting: {\n                    enabled: true\n                },\n                series: [{\n                        name: 'History data',\n                        data: [],\n                        yAxis: 0\n                    }, {\n                        name: 'History data2',\n                        data: [],\n                        yAxis: 1\n                    }]\n            };\n        };\n        ExampleHistoryChartWidget.prototype.exportData = function () {\n            if (pm3.monitor.historyCount > 0) {\n                var exportData = [];\n                for (var i = 0; i < pm3.monitor.historyCount; i++) {\n                    var c = pm3.monitor.getHistory(i);\n                    exportData.push({ \"workTime\": utilities.formatRelativeTime(c.workTime),\n                        \"power\": c.power,\n                        \"strokesPerMinute\": c.strokesPerMinute,\n                        \"distance\": c.distance,\n                        \"splitTime\": utilities.formatRelativeTime(c.splitTime),\n                        \"heartRate\": c.heartRate\n                    });\n                }\n                var sCSV = utilities.convertArrayOfObjectsToCSV({ data: exportData });\n                var blob = new Blob([sCSV], { type: \"data:application/json;charset=utf-8\" });\n                utilities.writeFile(blob, \"History.csv\");\n            }\n            else\n                app.showTopError(\"No data to export.\");\n        };\n        ExampleHistoryChartWidget.prototype.initEditPropertiesControls = function (done) {\n            var widget = this;\n            this._dialogHistorySettings = dialog.newStandardDialog({\n                title: 'History example settings',\n                message: $('#dialogHistoryExampleSettings'),\n                onhide: function () {\n                    widget.setOptions();\n                    widget.reCreateChart();\n                    widget.updateChart();\n                },\n                buttons: [{\n                        label: 'Clear data',\n                        action: function (dlg) {\n                            widget.setOptions();\n                            pm3.monitor.clearHistory();\n                            widget.reCreateChart();\n                            widget.updateChart();\n                            dlg.close();\n                        }\n                    }, {\n                        label: 'Export',\n                        action: function (dlg) {\n                            widget.exportData();\n                        }\n                    }\n                ]\n            });\n            done();\n        };\n        ExampleHistoryChartWidget.prototype.setOptions = function () {\n            var checkedControlIdX = $('input[name=radioHistoryExampleXAxis]:checked').prop('id');\n            this._historyXasOption = HistoryXasOptions.getFromId(checkedControlIdX);\n            var checkedControlIdY = $('input[name=radioHistoryExampleYAxis]:checked').prop('id');\n            this._historyYasOption = HistoryYasOptions.getFromId(checkedControlIdY);\n            var checkedControlIdY2 = $('input[name=radioHistoryExampleYAxis2]:checked').prop('id');\n            checkedControlIdY2 = checkedControlIdY2.replace('2', '');\n            this._historyYasOption2 = HistoryYasOptions.getFromId(checkedControlIdY2);\n            this._historyYAxisStartZero = $('#historyExampleYAxisStartZero').prop('checked');\n            this.saveHistoryState();\n        };\n        ExampleHistoryChartWidget.prototype.openEditProperties = function () {\n            $('#' + this._historyXasOption.controlId).attr('checked', (true).toString());\n            $('#' + this._historyYasOption.controlId).attr('checked', (true).toString());\n            $('#' + this._historyYasOption2.controlId + '2').attr('checked', (true).toString());\n            $('#historyExampleYAxisStartZero').prop('checked', this._historyYAxisStartZero);\n            this._dialogHistorySettings.open();\n        };\n        ExampleHistoryChartWidget.prototype.fillSeries = function (series, yOption) {\n            var count = pm3.monitor.historyCount;\n            var countPoints = series.points.length;\n            var clear = false;\n            //var date = new Date();\n            //date = new Date(date.getFullYear(),date.getMonth(),date.getDay());\n            if (count > countPoints) {\n                for (var i = countPoints; i < count; i++) {\n                    var last = (i == (count - 1));\n                    var yValue = pm3.monitor.getHistory(i)[yOption.value];\n                    var xValue = pm3.monitor.getHistory(i)[this._historyXasOption.value];\n                    if (i > 0) {\n                        var xPrevValue = pm3.monitor.getHistory(i - 1)[this._historyXasOption.value];\n                        if (xPrevValue > xValue)\n                            clear = true;\n                    }\n                    if (xValue instanceof Date)\n                        xValue = xValue.getTime(); //date.getTime()+\n                    if (yValue instanceof Date)\n                        yValue = yValue.getTime(); //date.getTime()+\n                    series.addPoint([xValue, yValue], last, false);\n                }\n            }\n            else if (count < countPoints)\n                clear = true;\n            return clear;\n        };\n        ExampleHistoryChartWidget.prototype.updateChart = function () {\n            var clear = this.fillSeries(this.chart.series[0], this._historyYasOption);\n            if (this._historyYasOption2 != HistoryYasOptions.none) {\n                this.fillSeries(this.chart.series[1], this._historyYasOption2);\n            }\n            if (clear) {\n                pm3.monitor.clearHistory();\n                this.reCreateChart();\n            }\n        };\n        ExampleHistoryChartWidget.prototype.historyUpdate = function (count) {\n            this.updateChart();\n        };\n        ExampleHistoryChartWidget.prototype.loaded = function () {\n            this.loadHistoryState();\n            _super.prototype.loaded.call(this);\n            pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate);\n        };\n        ExampleHistoryChartWidget.prototype.beforeUnload = function () {\n            _super.prototype.beforeUnload.call(this);\n            pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate);\n        };\n        return ExampleHistoryChartWidget;\n    }(ergometerWidgets.HighChartWidget));\n    tijmenvangulik_examples_historywidget.ExampleHistoryChartWidget = ExampleHistoryChartWidget;\n    /*------------------------------------------------------------------------------\n        Create and remove the widgets in the Plugin\n    ------------------------------------------------------------------------------*/\n    var ExamplePlugin = (function (_super) {\n        __extends(ExamplePlugin, _super);\n        function ExamplePlugin() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ExamplePlugin.prototype.init = function () {\n            //create the widget(s) on create\n            dashboard.widgetRegistry().register(ExampleHistoryChartWidget, 'tijmenvangulik_examples_HistoryWidget', 'History example chart', ['Examples']);\n        };\n        ExamplePlugin.prototype.remove = function () {\n            //remove the widgets when the plugin is removed\n            dashboard.widgetRegistry().deregister('tijmenvangulik_examples_HistoryWidget');\n        };\n        return ExamplePlugin;\n    }(ExternalPlugin));\n    var plugin;\n    plugin = new ExamplePlugin();\n})(tijmenvangulik_examples_historywidget || (tijmenvangulik_examples_historywidget = {}));\n","styles":"\n","typeScript":"module tijmenvangulik_examples_historywidget { //make a name space to prevent mix ups\n\n  interface  HistoryChartSettings {\n    yAxis : string;\n    yAxis2 : string;\n    historyYAxisStartZero: boolean;\n  }\n  export interface HistoryXasOption {\n    value : string;\n    controlId : string;\n    chartAxisType : string;\n    caption : string;\n  }\n  export interface HistoryYasOption {\n    value :string;\n    controlId : string;\n    chartAxisType : string;\n    caption : string;\n  }\n\n  export class HistoryXasOptions{\n    public static workTime : HistoryXasOption = {value : \"workTime\", controlId :\"historyExampleTime\",chartAxisType:\"datetime\", caption:\"Work time\" };\n    public static distance : HistoryXasOption = {value :\"distance\" , controlId :\"historyExampleMeters\",chartAxisType:\"linear\",caption:\"Work distance\" };\n    public static getFromId(id : string) : HistoryXasOption {\n      switch (id) //should learn too loop items in class\n      {\n        case \"historyExampleTime\" : return HistoryXasOptions.workTime;\n        case \"historyExampleMeters\" : return HistoryXasOptions.distance;\n        default : return HistoryXasOptions.workTime;\n      }\n\n    }\n  }\n\n  export class HistoryYasOptions{\n    public static split : HistoryYasOption= {value :\"splitTime\", controlId :\"historyExampleSplit\",chartAxisType:\"datetime\", caption:\"Split time\" };\n    public static power : HistoryYasOption= {value :\"power\", controlId :\"historyExamplePower\",chartAxisType:\"linear\", caption:\"Power\" };\n    public static strokesPerMinute : HistoryYasOption= {value :\"strokesPerMinute\", controlId :\"historyExampleStrokesPerMinute\",chartAxisType:\"linear\", caption:\"Strokes per minute\"};\n    public static heartRate : HistoryYasOption= {value :\"heartRate\", controlId :\"historyExampleHeartRate\",chartAxisType:\"linear\", caption:\"Heart rate\" };\n    public static none : HistoryYasOption= {value :\"none\", controlId :\"historyExampleNone\",chartAxisType:\"\", caption:\"\" };\n\n    public static getFromId(id : string) : HistoryXasOption {\n      switch (id) //should learn too loop items in class\n      {\n        case \"historyExampleSplit\" : return HistoryYasOptions.split;\n        case \"historyExamplePower\" : return HistoryYasOptions.power;\n        case \"historyExampleStrokesPerMinute\" : return HistoryYasOptions.strokesPerMinute;\n        case \"historyExampleHeartRate\" : return HistoryYasOptions.heartRate;\n        case \"historyExampleNone\" : return HistoryYasOptions.none;\n        default : return HistoryYasOptions.split;\n      }\n\n    }\n\n  }\n\n// set up the updating of the chart each second\n\n\n  export class ExampleHistoryChartWidget  extends ergometerWidgets.HighChartWidget {\n\n    private _historyXasOption : HistoryXasOption = HistoryXasOptions.workTime;\n    private _historyYasOption : HistoryYasOption = HistoryYasOptions.split;\n    private _historyYasOption2 : HistoryYasOption = HistoryYasOptions.none;\n    private _historyYAxisStartZero : boolean =true;\n\n    private getHistorySettings() : HistoryChartSettings {\n      return {\n        yAxis: this._historyYasOption.controlId,\n        yAxis2: this._historyYasOption2.controlId,\n        historyYAxisStartZero: this._historyYAxisStartZero\n      }\n    }\n    private setHistorySettings(settings : HistoryChartSettings) {\n      this._historyYasOption=  HistoryYasOptions.getFromId(settings.yAxis);\n      this._historyYasOption2=  HistoryYasOptions.getFromId(settings.yAxis2);\n      this._historyYAxisStartZero= settings.historyYAxisStartZero===true;\n    }\n\n    private saveHistoryState() {\n      localStorage.setItem(\"historyExampleChartWidget_settings\",JSON.stringify(this.getHistorySettings() ));\n    }\n    private loadHistoryState() {\n      var settingsString=localStorage.getItem(\"historyExampleChartWidget_settings\");\n      var settings : HistoryChartSettings;\n      if  (settingsString!=\"undefined\" && settingsString!=null && settingsString!=\"null\"  ) {\n        settings=<HistoryChartSettings> JSON.parse(settingsString);\n        this.setHistorySettings(settings);\n      }\n    }\n\n    public getChartOptions() : HighchartsOptions {\n      Highcharts.setOptions({\n        global: {\n          useUTC: true\n        }\n      });\n      var chartWidget =this;\n      return {\n        chart: {\n          renderTo: 'container',\n          type: 'area'\n\n//\t                zoomType: 'x',\n//\t                marginRight: 10,\n//\t                reflow: true\n        },\n        title: null,\n        xAxis: {\n          type: this._historyXasOption.chartAxisType,\n          title: {\n            text: this._historyXasOption.caption\n          },\n          showFirstLabel: false\n\n        },\n        yAxis: [{\n          title: {\n            text: this._historyYasOption.caption\n          },\n          type: this._historyYasOption.chartAxisType\n        },{\n          title: {\n            text: this._historyYasOption2.caption\n          },\n          type: this._historyYasOption2.chartAxisType,\n          opposite:true\n        }],\n        plotOptions: {\n          area: {\n            marker: {\n              enabled: false,\n              states: {\n                hover: {\n                  enabled: true,\n                  radius: 5\n                }\n              }\n            },\n            threshold: (this._historyYAxisStartZero)?0:null\n          }\n        },\n        tooltip: {\n          formatter: function() { //need mixed scope here\n            var x : any=this.x;\n            if (chartWidget._historyXasOption.chartAxisType=='datetime')\n              x=Highcharts.dateFormat('%H:%M:%S', x);\n            var y: any=this.y;\n            var yAxis= chartWidget._historyYasOption;\n            if (this.series.index==1) yAxis=chartWidget._historyYasOption2;\n            if (yAxis.chartAxisType=='datetime')\n              y=Highcharts.dateFormat('%M:%S', y)\n            return '<b>'+ this.series.name +'</b><br/>'+\n                chartWidget._historyXasOption.caption+':'+x+'<br/>'+\n                yAxis.caption+':'+y;\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        exporting: {\n          enabled: true\n        },\n        series: [{\n          name: 'History data',\n          data: [ ],\n          yAxis:0\n        },{\n          name: 'History data2',\n          data: [ ],\n          yAxis:1\n        }]\n\n      };\n    }\n    public exportData() {\n      if (pm3.monitor.historyCount>0) {\n        let exportData = [];\n        for(let i =0; i<pm3.monitor.historyCount;i++ ) {\n          let c=pm3.monitor.getHistory(i);\n          exportData.push(\n              { \"workTime\": utilities.formatRelativeTime(c.workTime),\n                \"power\": c.power,\n                \"strokesPerMinute\":c.strokesPerMinute ,\n                \"distance\":c.distance,\n                \"splitTime\":utilities.formatRelativeTime(c.splitTime),\n                \"heartRate\":c.heartRate\n              })\n        }\n        let sCSV = utilities.convertArrayOfObjectsToCSV({data: exportData});\n        let blob = new Blob([sCSV], {type: \"data:application/json;charset=utf-8\"});\n\n        utilities.writeFile(blob, \"History.csv\");\n      }\n      else app.showTopError(\"No data to export.\")\n    }\n\n    constructor (controller : dashboard.Controller) {\n      super(controller);\n      this.editPropertiesVisible = true;\n      this.defaultWidth=3;\n    }\n    private _dialogHistorySettings  : BootstrapDialog;\n    public  initEditPropertiesControls(done : ()=>void) {\n\n      \n        var widget = this;\n        this._dialogHistorySettings= dialog.newStandardDialog({\n          title: 'History example settings',\n          message: $('#dialogHistoryExampleSettings'),\n          onhide: ()=>{\n            widget.setOptions();\n            widget.reCreateChart();\n            widget.updateChart();\n          },\n          buttons:[ {\n            label:'Clear data',\n            action: (dlg)=>{\n              widget.setOptions();\n              pm3.monitor.clearHistory();\n              widget.reCreateChart();\n              widget.updateChart();\n              dlg.close();\n            }},{\n            label:'Export',\n            action: (dlg)=>{\n              widget.exportData();\n            }\n          }\n\n          ]\n        });\n\n        done();\n    }\n\n    public setOptions() {\n\n      var checkedControlIdX : string= $('input[name=radioHistoryExampleXAxis]:checked').prop('id');\n      this._historyXasOption = HistoryXasOptions.getFromId(checkedControlIdX);\n\n      var checkedControlIdY : string= $('input[name=radioHistoryExampleYAxis]:checked').prop('id');\n      this._historyYasOption = HistoryYasOptions.getFromId(checkedControlIdY);\n\n      var checkedControlIdY2 : string= $('input[name=radioHistoryExampleYAxis2]:checked').prop('id');\n      checkedControlIdY2= checkedControlIdY2.replace('2','');\n      this._historyYasOption2 = HistoryYasOptions.getFromId(checkedControlIdY2);\n      this._historyYAxisStartZero= $('#historyExampleYAxisStartZero').prop('checked');\n      this.saveHistoryState();\n    }\n\n    public openEditProperties() {\n      $('#'+this._historyXasOption.controlId).attr('checked',(true).toString());\n\n      $('#'+this._historyYasOption.controlId).attr('checked',(true).toString());\n      $('#'+this._historyYasOption2.controlId+'2').attr('checked',(true).toString());\n      $('#historyExampleYAxisStartZero').prop('checked',this._historyYAxisStartZero);\n\n      this._dialogHistorySettings.open();\n\n    }\n    public fillSeries(series : HighchartsSeriesObject, yOption : HistoryYasOption) : boolean{\n      var count : number= pm3.monitor.historyCount;\n\n      var countPoints  = series.points.length;\n      var clear = false;\n      //var date = new Date();\n      //date = new Date(date.getFullYear(),date.getMonth(),date.getDay());\n\n      if (count>countPoints) {\n\n        for (var i=countPoints;i<count;i++) {\n          var last = (i==(count-1));\n          var yValue = pm3.monitor.getHistory(i)[yOption.value];\n\n          var xValue = pm3.monitor.getHistory(i)[this._historyXasOption.value];\n          if (i>0) {\n            var xPrevValue = pm3.monitor.getHistory(i-1)[this._historyXasOption.value];\n            if (xPrevValue>xValue) //when time or meters go backwards, do a clear\n              clear= true;\n          }\n          if (xValue instanceof Date )\n            xValue = xValue.getTime();  //date.getTime()+\n          if (yValue instanceof Date )\n            yValue = yValue.getTime();\t//date.getTime()+\n\n          series.addPoint([xValue, yValue], last ,false);\n        }\n\n      }\n      else if (count<countPoints) clear=true;\n      return clear;\n    }\n    public updateChart() {\n\n      var clear= this.fillSeries(this.chart.series[0],this._historyYasOption);\n      if (this._historyYasOption2!=HistoryYasOptions.none) {\n        this.fillSeries(this.chart.series[1],this._historyYasOption2)\n      }\n      if (clear) {\n        pm3.monitor.clearHistory();\n        this.reCreateChart();\n      }\n\n    }\n    public historyUpdate(count : number) {\n      this.updateChart();\n    }\n    public loaded() {\n      this.loadHistoryState();\n      super.loaded();\n      pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate);\n    }\n    public beforeUnload() {\n      super.beforeUnload();\n      pm3.monitor.pubsubs.subHistoryUpdate(this, this.historyUpdate)\n    }\n\n  }\n\n  /*------------------------------------------------------------------------------\n      Create and remove the widgets in the Plugin\n  ------------------------------------------------------------------------------*/\n  class ExamplePlugin extends ExternalPlugin {\n\n    public historyWidget : ExampleHistoryChartWidget;\n\n    public init() {\n      //create the widget(s) on create\n      dashboard.widgetRegistry().register(ExampleHistoryChartWidget,'tijmenvangulik_examples_HistoryWidget','History example chart',['Examples']);\n    }\n    public remove() {\n      //remove the widgets when the plugin is removed\n      dashboard.widgetRegistry().deregister('tijmenvangulik_examples_HistoryWidget');\n    }\n  }\n\n  var plugin : ExamplePlugin;\n  plugin = new ExamplePlugin();\n\n}","html":"<div style=\"display:none\">\n<div id=\"dialogHistoryExampleSettings\" title=\"History example settings\">\n  <div class=\"form-horizontal\">\n  <div class=\"form-group\">\n    <label class=\"col-sm-3 control-label\" for=\"historExampleyXAxis\">X-axis</label>\n    <div class=\"col-sm-9 \">\n      <div id=\"historyXAxis\">\n        <label class=\"radio-inline\" for=\"historyExampleTime\"><input type=\"radio\" id=\"historyExampleTime\" name=\"radioHistoryXAxis\">Time</label>\n        <label class=\"radio-inline\" for=\"historyExampleMeters\"><input type=\"radio\" id=\"historyExampleMeters\" name=\"radioHistoryXAxis\">Meters</label>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-sm-3 control-label\" for=\"historyYAxis\">Y-axis</label>\n    <div class=\"col-sm-9 \">\n      <div id=\"historyYAxis\">\n        <label class=\"radio-inline\" for=\"historySplit\"><input type=\"radio\" id=\"historyExampleSplit\" name=\"radioHistoryExampleYAxis\">Split</label>\n        <label class=\"radio-inline\" for=\"historyPower\"><input type=\"radio\" id=\"historyExamplePower\" name=\"radioHistoryExampleYAxis\">Power</label>\n        <label class=\"radio-inline\" for=\"historyStrokesPerMinute\"><input type=\"radio\" id=\"historyExampleStrokesPerMinute\" name=\"radioHistoryExampleYAxis\">Strokes per min</label>\n        <label class=\"radio-inline\" for=\"historyHeartRate\"><input type=\"radio\" id=\"historExampleyHeartRate\" name=\"radioHistoryExampleYAxis\">Heart rate</label>\n      </div>\n    </div>\n  </div>\n    <div class=\"form-group\">\n      <label class=\"col-sm-3 control-label\" for=\"historyYAxis2\">Y-axis 2</label>\n      <div class=\"col-sm-9 \">\n        <div id=\"historyYAxis2\">\n          <label class=\"radio-inline\" ><input type=\"radio\" id=\"historyExampleSplit2\" name=\"radioHistoryExampleYAxis2\">Split</label>\n          <label class=\"radio-inline\" ><input type=\"radio\" id=\"historyExamplePower2\" name=\"radioHistoryExampleYAxis2\">Power</label>\n          <label class=\"radio-inline\" ><input type=\"radio\" id=\"historyExampleStrokesPerMinute2\" name=\"radioHistoryExampleYAxis2\">Strokes per min</label>\n          <label class=\"radio-inline\" ><input type=\"radio\" id=\"historyExampleHeartRate2\" name=\"radioHistoryExampleYAxis2\">Heart rate</label>\n          <label class=\"radio-inline\" ><input type=\"radio\" id=\"historyExampleNone2\" name=\"radioHistoryExampleYAxis2\">None</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-sm-3 control-label\" for=\"historyExampleYAxisStartZero\">Start Y-axis on 0</label>\n      <div class=\"col-sm-9 controls\">\n        <input type=\"checkbox\" id=\"historyExampleYAxisStartZero\">\n      </div>\n    </div>\n  </div>\n</div>\n</div>"}