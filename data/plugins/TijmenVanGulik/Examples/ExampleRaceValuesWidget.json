{"id":"ExampleRaceValuesWidget","name":"ExampleRaceValuesWidget","description":"Example of how to get the values of a race (the values of all other rowers) This should give you an start on writing row together widgets","version":"1.0","author":"Tijmen van Gulik","url":"plugins/TijmenVanGulik/Examples/ExampleRaceValuesWidget.json","script":"var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ergometerWidgets;\n(function (ergometerWidgets) {\n    var ExampleRaceValuesRowerData = (function (_super) {\n        __extends(ExampleRaceValuesRowerData, _super);\n        function ExampleRaceValuesRowerData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ExampleRaceValuesRowerData;\n    }(ergometerServerClient.SharedRaceRowerData));\n    ergometerWidgets.ExampleRaceValuesRowerData = ExampleRaceValuesRowerData;\n    var ExampleRaceValuesRowTogether = (function (_super) {\n        __extends(ExampleRaceValuesRowTogether, _super);\n        function ExampleRaceValuesRowTogether(widget) {\n            var _this = _super.call(this) || this;\n            _this._widget = widget;\n            return _this;\n        }\n        ExampleRaceValuesRowTogether.prototype.createSharedRaceRowerData = function () {\n            return new ExampleRaceValuesRowerData(this);\n        };\n        ExampleRaceValuesRowTogether.prototype.raceDataUpdated = function () {\n            _super.prototype.raceDataUpdated.call(this);\n            this._widget.raceDataUpdated();\n        };\n        Object.defineProperty(ExampleRaceValuesRowTogether.prototype, \"rowers\", {\n            get: function () {\n                return _super.prototype.getRowersData.call(this);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ExampleRaceValuesRowTogether.prototype, \"myRower\", {\n            get: function () {\n                return _super.prototype.getMyRaceData.call(this);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ExampleRaceValuesRowTogether.prototype.paint = function () {\n            _super.prototype.paint.call(this);\n            this._widget.paint();\n        };\n        return ExampleRaceValuesRowTogether;\n    }(ergometerServerClient.SharedRowTogether));\n    ergometerWidgets.ExampleRaceValuesRowTogether = ExampleRaceValuesRowTogether;\n    var ExampleRaceValuesWidget = (function (_super) {\n        __extends(ExampleRaceValuesWidget, _super);\n        function ExampleRaceValuesWidget(controller) {\n            var _this = _super.call(this, controller) || this;\n            _this._splitTimeVisible = true;\n            _this._splitTimeAverageVisible = true;\n            _this._strokesPerMinuteVisible = false;\n            _this._workDistanceVisible = false;\n            _this._workTimeVisible = false;\n            _this._trainingVisible = false;\n            _this._dragFactorVisible = false;\n            _this._race = new ExampleRaceValuesRowTogether(_this);\n            _this.editPropertiesVisible = true;\n            return _this;\n        }\n        ExampleRaceValuesWidget.prototype.loaded = function () {\n            _super.prototype.loaded.call(this);\n            this._race.loaded();\n            this.loadExampleRaceValuesState();\n            this.paint();\n        };\n        ExampleRaceValuesWidget.prototype.beforeUnload = function () {\n            _super.prototype.beforeUnload.call(this);\n            this._race.beforeUnload();\n        };\n        ExampleRaceValuesWidget.prototype.raceDataUpdated = function () {\n            this.paint();\n        };\n        ExampleRaceValuesWidget.prototype.paint = function () {\n            var _this = this;\n            var table = this._table;\n            var iRow = 1;\n            this._race.rowers.forEach(function (rower) {\n                if (rower.userName) {\n                    var cellNr = 0;\n                    utilities.setTableCell(table, iRow, cellNr++, rower.userName);\n                    if (_this._splitTimeVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.speed == 'number' && rower.speed > 0) ? utilities.speedToSplitTime(rower.speed) : \"\");\n                    if (_this._splitTimeAverageVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.averageSpeed == 'number' && rower.averageSpeed > 0) ? utilities.speedToSplitTime(rower.averageSpeed) : \"\");\n                    if (_this._strokesPerMinuteVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.strokesPerMinute == 'number' && rower.strokesPerMinute > 0) ? rower.strokesPerMinute.toString() : \"\");\n                    if (_this._workDistanceVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.workDistance == 'number' && rower.workDistance > 0) ? rower.workDistance.toString() : \"\");\n                    if (_this._workTimeVisible) {\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.workTime == 'object') ? utilities.formatRelativeTime(rower.workTime) : \"\");\n                    }\n                    if (_this._trainingVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, rower.trainingDescription());\n                    if (_this._dragFactorVisible)\n                        utilities.setTableCell(table, iRow, cellNr++, (typeof rower.dragFactor == 'number' && rower.dragFactor > 0) ? rower.dragFactor.toString() : \"\");\n                    //remove not needed cells\n                    utilities.removeNotSetCells(table, iRow, cellNr);\n                    iRow++;\n                }\n            });\n            var headNr = 0;\n            utilities.setTableHead(table, headNr++, \"Rowers\");\n            if (this._splitTimeVisible)\n                utilities.setTableHead(table, headNr++, \"Split\");\n            if (this._splitTimeAverageVisible)\n                utilities.setTableHead(table, headNr++, \"Avg split\");\n            if (this._strokesPerMinuteVisible)\n                utilities.setTableHead(table, headNr++, \"Stroke/p/min\");\n            if (this._workDistanceVisible)\n                utilities.setTableHead(table, headNr++, \"Distance\");\n            if (this._workTimeVisible)\n                utilities.setTableHead(table, headNr++, \"Time\");\n            if (this._trainingVisible)\n                utilities.setTableHead(table, headNr++, \"Training\");\n            if (this._dragFactorVisible)\n                utilities.setTableHead(table, headNr++, \"Dragfactor\");\n            utilities.removeNotSetHeaders(table, headNr);\n            //remove not needed rows\n            utilities.removeNotSetRows(table, iRow);\n        };\n        ExampleRaceValuesWidget.prototype.initEditPropertiesControls = function (done) {\n            var _this = this;\n            var self = this;\n            this._dialogSettings = dialog.newStandardDialog({\n                title: 'Settings example',\n                message: $('#dialogExampleRaceValuesSettings'),\n                onhide: function () {\n                    _this.updateSettings();\n                },\n                helpText: \"This widget show the values of other rowers in the table. Tick the checkboxes display more or less values in the table. \\n\"\n            });\n            done();\n        };\n        ExampleRaceValuesWidget.prototype.openEditProperties = function () {\n            $('#ExampleRaceValuesSplitTime').prop(\"checked\", this._splitTimeVisible);\n            $('#ExampleRaceValuesSplitTimeAverage').prop(\"checked\", this._splitTimeAverageVisible);\n            $('#ExampleRaceValuesStrokesPerMinute').prop(\"checked\", this._strokesPerMinuteVisible);\n            $('#ExampleRaceValuesworkDistance').prop(\"checked\", this._workDistanceVisible);\n            $('#ExampleRaceValuesWorkTime').prop(\"checked\", this._workTimeVisible);\n            $('#ExampleRaceValuesTraining').prop(\"checked\", this._trainingVisible);\n            $('#ExampleRaceValuesDragFactor').prop(\"checked\", this._dragFactorVisible);\n            this._dialogSettings.open();\n        };\n        ExampleRaceValuesWidget.prototype.updateSettings = function () {\n            var changed = false;\n            var value = $(\"#ExampleRaceValuesSplitTime\").prop(\"checked\");\n            if (this._splitTimeVisible != value) {\n                this._splitTimeVisible = value;\n                changed = true;\n            }\n            value = $(\"#ExampleRaceValuesSplitTimeAverage\").prop(\"checked\");\n            if (this._splitTimeAverageVisible != value) {\n                this._splitTimeAverageVisible = value;\n                changed = true;\n            }\n            /*\n         _strokesPerMinuteVisible =false;\n          _workDistanceVisible=false;\n          _workTimeVisible=false;\n          _trainingVisible=false;\n          _dragFactorVisible=false\n         */\n            value = $(\"#ExampleRaceValuesStrokesPerMinute\").prop(\"checked\");\n            if (this._strokesPerMinuteVisible != value) {\n                this._strokesPerMinuteVisible = value;\n                changed = true;\n            }\n            value = $(\"#ExampleRaceValuesworkDistance\").prop(\"checked\");\n            if (this._workDistanceVisible != value) {\n                this._workDistanceVisible = value;\n                changed = true;\n            }\n            value = $(\"#ExampleRaceValuesWorkTime\").prop(\"checked\");\n            if (this._workTimeVisible != value) {\n                this._workTimeVisible = value;\n                changed = true;\n            }\n            value = $(\"#ExampleRaceValuesTraining\").prop(\"checked\");\n            if (this._trainingVisible != value) {\n                this._trainingVisible = value;\n                changed = true;\n            }\n            value = $(\"#ExampleRaceValuesDragFactor\").prop(\"checked\");\n            if (this._dragFactorVisible != value) {\n                this._dragFactorVisible = value;\n                changed = true;\n            }\n            if (changed) {\n                this.paint();\n                this.saveExampleRaceValuesState();\n            }\n        };\n        ExampleRaceValuesWidget.prototype.getExampleRaceValuesSettings = function () {\n            return {\n                splitTimeVisible: this._splitTimeVisible,\n                splitTimeAverageVisible: this._splitTimeAverageVisible,\n                strokesPerMinuteVisible: this._strokesPerMinuteVisible,\n                workTimeVisible: this._workTimeVisible,\n                workDistanceVisible: this._workDistanceVisible,\n                trainingVisible: this._trainingVisible,\n                dragFactorVisible: this._dragFactorVisible\n            };\n        };\n        ExampleRaceValuesWidget.prototype.setExampleRaceValuesSettings = function (settings) {\n            this._splitTimeVisible = settings.splitTimeVisible;\n            this._splitTimeAverageVisible = settings.splitTimeAverageVisible;\n            this._strokesPerMinuteVisible = settings.strokesPerMinuteVisible;\n            this._workTimeVisible = settings.workTimeVisible;\n            this._workDistanceVisible = settings.workDistanceVisible;\n            this._trainingVisible = settings.trainingVisible;\n            this._dragFactorVisible = settings.dragFactorVisible;\n        };\n        ExampleRaceValuesWidget.prototype.saveExampleRaceValuesState = function () {\n            localStorage.setItem(\"ExampleRaceValuesWidget_settings\", JSON.stringify(this.getExampleRaceValuesSettings()));\n        };\n        ExampleRaceValuesWidget.prototype.loadExampleRaceValuesState = function () {\n            var settingsString = localStorage.getItem(\"ExampleRaceValuesWidget_settings\");\n            var settings;\n            if (settingsString != \"undefined\" && settingsString != null && settingsString != \"null\") {\n                settings = JSON.parse(settingsString);\n                this.setExampleRaceValuesSettings(settings);\n            }\n        };\n        ExampleRaceValuesWidget.prototype.initControl = function () {\n            _super.prototype.initControl.call(this);\n            var table = $(\"<table id=\\\"\" + this.name + \"_table\\\" class=\\\"table-striped\\\"></table>\");\n            this.$container.append(table);\n            this._table = (table.get(0));\n        };\n        return ExampleRaceValuesWidget;\n    }(ergometerWidgets.ErgometerWidget));\n    ergometerWidgets.ExampleRaceValuesWidget = ExampleRaceValuesWidget;\n    dashboard.widgetRegistry().register(ExampleRaceValuesWidget, 'ExampleRaceValuesWidget', 'Race values example', [ergometerWidgets.MENU_OTHER_WIDGET_GROUP], \"Shows values of other rowers example\");\n})(ergometerWidgets || (ergometerWidgets = {}));\n","styles":"#ExampleRaceValuesWidget_table {\n width: 100%;\n}","typeScript":"namespace ergometerWidgets {\n    \n    type JQuery = any;\n    declare var $ : any;\n    export class ExampleRaceValuesRowerData extends ergometerServerClient.SharedRaceRowerData {\n  \n  \n    }\n    export interface ExampleRaceValuesSettings {\n      splitTimeVisible : boolean;\n      splitTimeAverageVisible : boolean;\n      strokesPerMinuteVisible : boolean;\n      workDistanceVisible: boolean;\n      workTimeVisible: boolean;\n      trainingVisible: boolean;\n      dragFactorVisible: boolean;\n    }\n    export class ExampleRaceValuesRowTogether extends ergometerServerClient.SharedRowTogether {\n      _widget : ExampleRaceValuesWidget;\n      \n      constructor (widget : ExampleRaceValuesWidget) {\n        super();\n        this._widget=widget;\n      }\n      protected createSharedRaceRowerData() : ergometerServerClient.SharedRaceRowerData {\n        return new ExampleRaceValuesRowerData(this);\n      }\n      public raceDataUpdated() {\n        super.raceDataUpdated();\n        this._widget.raceDataUpdated();\n      }\n      public get rowers(): ExampleRaceValuesRowerData[] {\n        return <ExampleRaceValuesRowerData[]>super.getRowersData();\n      }\n      \n      public get myRower() : ExampleRaceValuesRowerData {\n        return <ExampleRaceValuesRowerData>super.getMyRaceData();\n      }\n      public paint() {\n        super.paint();\n        this._widget.paint();\n  \n      }\n    }\n\n\n    export class ExampleRaceValuesWidget  extends ErgometerWidget {\n  \n      private _race : ExampleRaceValuesRowTogether;\n      private _table: HTMLTableElement;\n  \n      private _splitTimeVisible  = true;\n      private _splitTimeAverageVisible  = true;\n      \n      private _dialogSettings : BootstrapDialog;\n      private _strokesPerMinuteVisible =false;\n      private _workDistanceVisible=false;\n      private _workTimeVisible=false;\n      private _trainingVisible=false;\n      private _dragFactorVisible=false;\n      \n      public loaded() {\n        super.loaded();\n        this._race.loaded();\n        this.loadExampleRaceValuesState();\n        this.paint();\n      }\n  \n      public beforeUnload() {\n        super.beforeUnload();\n        this._race.beforeUnload();\n      }\n  \n      public raceDataUpdated() {\n        this.paint();\n      }\n  \n      public paint() {\n        let table=this._table;\n       \n  \n        let iRow=1;\n        this._race.rowers.forEach((rower)=>{\n          \n          if (rower.userName) {\n            let cellNr=0;\n            utilities.setTableCell(table,iRow,cellNr++,rower.userName);\n            if (this._splitTimeVisible)        \n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.speed=='number' && rower.speed>0)?utilities.speedToSplitTime(rower.speed):\"\");\n            if (this._splitTimeAverageVisible)                  \n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.averageSpeed=='number' && rower.averageSpeed>0)?utilities.speedToSplitTime(rower.averageSpeed):\"\");\n            \n            if (this._strokesPerMinuteVisible)                  \n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.strokesPerMinute=='number' && rower.strokesPerMinute>0)?rower.strokesPerMinute.toString():\"\");\n            if (this._workDistanceVisible)                  \n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.workDistance=='number' && rower.workDistance>0)?rower.workDistance.toString():\"\");\n            if (this._workTimeVisible) {\n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.workTime=='object')?utilities.formatRelativeTime(rower.workTime):\"\");\n            \n            }                 \n            if (this._trainingVisible)                  \n              utilities.setTableCell(table,iRow,cellNr++,rower.trainingDescription());\n  \n            if (this._dragFactorVisible)                  \n              utilities.setTableCell(table,iRow,cellNr++,(typeof rower.dragFactor=='number' && rower.dragFactor>0)?rower.dragFactor.toString():\"\");\n  \n            //remove not needed cells\n            utilities.removeNotSetCells(table,iRow,cellNr);\n            iRow++;\n          }\n          \n        });\n        var headNr=0;\n        utilities.setTableHead(table,headNr++,\"Rowers\");\n        if (this._splitTimeVisible) \n           utilities.setTableHead(table,headNr++,\"Split\");\n        if (this._splitTimeAverageVisible) \n           utilities.setTableHead(table,headNr++,\"Avg split\");\n        if (this._strokesPerMinuteVisible)                  \n          utilities.setTableHead(table,headNr++,\"Stroke/p/min\");\n        if (this._workDistanceVisible)                  \n          utilities.setTableHead(table,headNr++,\"Distance\");\n        if (this._workTimeVisible)                  \n          utilities.setTableHead(table,headNr++,\"Time\");\n        if (this._trainingVisible)                  \n          utilities.setTableHead(table,headNr++,\"Training\");\n   \n        if (this._dragFactorVisible)                  \n          utilities.setTableHead(table,headNr++,\"Dragfactor\");\n   \n        utilities.removeNotSetHeaders(table,headNr);\n        //remove not needed rows\n        utilities.removeNotSetRows(table,iRow);\n        \n      }\n      \n      public  initEditPropertiesControls(done : ()=>void) {\n    \n        var self=this;\n        \n        \n        this._dialogSettings=dialog.newStandardDialog({\n        title: 'Settings example',\n        message: $('#dialogExampleRaceValuesSettings'),\n        onhide: ()=>{\n            this.updateSettings();\n        },\n        helpText:`This widget show the values of other rowers in the table. Tick the checkboxes display more or less values in the table. \n`\n        });\n        done();\n      }\n      public openEditProperties() {\n        $('#ExampleRaceValuesSplitTime').prop(\"checked\",this._splitTimeVisible);\n        $('#ExampleRaceValuesSplitTimeAverage').prop(\"checked\",this._splitTimeAverageVisible);\n        \n        $('#ExampleRaceValuesStrokesPerMinute').prop(\"checked\",this._strokesPerMinuteVisible);\n        $('#ExampleRaceValuesworkDistance').prop(\"checked\",this._workDistanceVisible);\n        $('#ExampleRaceValuesWorkTime').prop(\"checked\",this._workTimeVisible);\n        $('#ExampleRaceValuesTraining').prop(\"checked\",this._trainingVisible);\n        $('#ExampleRaceValuesDragFactor').prop(\"checked\",this._dragFactorVisible);\n        \n        this._dialogSettings.open();\n      }\n      protected updateSettings() {\n        let changed=false;\n        var value=$(\"#ExampleRaceValuesSplitTime\").prop(\"checked\");\n        if (this._splitTimeVisible!=value ) {\n          this._splitTimeVisible=value;\n          changed=true;\n        }\n        value=$(\"#ExampleRaceValuesSplitTimeAverage\").prop(\"checked\");\n        if (this._splitTimeAverageVisible!=value ) {\n          this._splitTimeAverageVisible=value;\n          changed=true;\n        }\n         /*\n      _strokesPerMinuteVisible =false;\n       _workDistanceVisible=false;\n       _workTimeVisible=false;\n       _trainingVisible=false;\n       _dragFactorVisible=false\n      */\n        value=$(\"#ExampleRaceValuesStrokesPerMinute\").prop(\"checked\");\n        if (this._strokesPerMinuteVisible!=value ) {\n          this._strokesPerMinuteVisible=value;\n          changed=true;\n        }\n        value=$(\"#ExampleRaceValuesworkDistance\").prop(\"checked\");\n        if (this._workDistanceVisible!=value ) {\n          this._workDistanceVisible=value;\n          changed=true;\n        }\n        value=$(\"#ExampleRaceValuesWorkTime\").prop(\"checked\");\n        if (this._workTimeVisible!=value ) {\n          this._workTimeVisible=value;\n          changed=true;\n        }\n        value=$(\"#ExampleRaceValuesTraining\").prop(\"checked\");\n        if (this._trainingVisible!=value ) {\n          this._trainingVisible=value;\n          changed=true;\n        }\n        value=$(\"#ExampleRaceValuesDragFactor\").prop(\"checked\");\n        if (this._dragFactorVisible!=value ) {\n          this._dragFactorVisible=value;\n          changed=true;\n        }\n        if (changed) {\n          this.paint();\n          this.saveExampleRaceValuesState();\n        }\n      }\n     \n      protected getExampleRaceValuesSettings() :ExampleRaceValuesSettings {\n         return {\n           splitTimeVisible: this._splitTimeVisible,\n           splitTimeAverageVisible: this._splitTimeAverageVisible,\n           strokesPerMinuteVisible: this._strokesPerMinuteVisible,\n           workTimeVisible: this._workTimeVisible,\n           workDistanceVisible: this._workDistanceVisible,\n           trainingVisible: this._trainingVisible,\n           dragFactorVisible: this._dragFactorVisible\n        }\n      }\n  \n      protected setExampleRaceValuesSettings(settings : ExampleRaceValuesSettings) {\n        this._splitTimeVisible = settings.splitTimeVisible;\n        this._splitTimeAverageVisible = settings.splitTimeAverageVisible;\n        this._strokesPerMinuteVisible= settings.strokesPerMinuteVisible;\n        this._workTimeVisible=settings.workTimeVisible;\n        this._workDistanceVisible=settings.workDistanceVisible;\n        this._trainingVisible=settings.trainingVisible;\n        this._dragFactorVisible=settings.dragFactorVisible;\n      }\n  \n      protected saveExampleRaceValuesState() {\n        localStorage.setItem(\"ExampleRaceValuesWidget_settings\",JSON.stringify(this.getExampleRaceValuesSettings() ));\n      }\n      protected loadExampleRaceValuesState() {\n        var settingsString=localStorage.getItem(\"ExampleRaceValuesWidget_settings\");\n        var settings : ExampleRaceValuesSettings;\n        if  (settingsString!=\"undefined\" && settingsString!=null && settingsString!=\"null\"  ) {\n          settings=<ExampleRaceValuesSettings> JSON.parse(settingsString);\n          this.setExampleRaceValuesSettings(settings);\n        }\n      }\n      public initControl() {\n        super.initControl();\n  \n        var table=$(`<table id=\"${this.name}_table\" class=\"table-striped\"></table>`);\n        this.$container.append(table);\n        this._table=<HTMLTableElement>(table.get(0));\n  \n      }\n      \n      constructor (controller : dashboard.Controller) {\n        super(controller);\n        this._race = new ExampleRaceValuesRowTogether(this);\n        this.editPropertiesVisible = true;\n      }\n  \n    }\n    dashboard.widgetRegistry().register(ExampleRaceValuesWidget,'ExampleRaceValuesWidget','Race values example',[MENU_OTHER_WIDGET_GROUP],\n    \"Shows values of other rowers example\");\n  \n  }\n  ","html":"<div id=\"dialogExampleRaceValuesSettings\" title=\"Settings example\">\n  \n    <div class=\"form-group\">\n      <label class=\"control-label\" for=\"ExampleRaceValuesSplitTime\">Split time</label>\n      <div class=\"controls\">\n        <input type=\"checkbox\" id=\"ExampleRaceValuesSplitTime\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesSplitTimeAverage\">Split time avg</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesSplitTimeAverage\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesStrokesPerMinute\">Strokes per minute</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesStrokesPerMinute\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesworkDistance\">Work distance</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesworkDistance\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesWorkTime\">Work time</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesWorkTime\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesTraining\">Training (workout)</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesTraining\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label\" for=\"ExampleRaceValuesDragFactor\">Drag factor</label>\n        <div class=\"controls\">\n          <input type=\"checkbox\" id=\"ExampleRaceValuesDragFactor\">\n        </div>\n    </div>\n    \n</div>\n\n"}
